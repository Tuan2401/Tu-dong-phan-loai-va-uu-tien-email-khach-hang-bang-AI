import pandas as pd
import re
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report, confusion_matrix
import joblib
import seaborn as sns
import matplotlib.pyplot as plt

# ------------------------------
# 1Ô∏è‚É£ ƒê·ªçc d·ªØ li·ªáu CSV
# ------------------------------
du_lieu = pd.read_csv('D:\\NAMBA\\ChuyenDoiSo\\Email_AI\\data\\email_training.csv')

print("S·ªë l∆∞·ª£ng email trong d·ªØ li·ªáu:", len(du_lieu))
print("C√°c nh√£n c√≥ trong d·ªØ li·ªáu:", du_lieu['Nhan'].unique())
print("5 email ƒë·∫ßu ti√™n:\n", du_lieu.head(), "\n")

# ------------------------------
# 2Ô∏è‚É£ Ti·ªÅn x·ª≠ l√Ω n·ªôi dung
# ------------------------------
def tien_xu_ly(text):
    text = str(text).lower()
    text = re.sub(r'\n', ' ', text)
    text = re.sub(r'\r', ' ', text)
    text = re.sub(r'\s+', ' ', text)
    text = re.sub(r'[^\w\s]', '', text)
    return text.strip()

du_lieu['NoiDung'] = du_lieu['NoiDung'].apply(tien_xu_ly)

# ------------------------------
# 3Ô∏è‚É£ Chu·∫©n b·ªã d·ªØ li·ªáu train/test
# ------------------------------
X = du_lieu['NoiDung']
y = du_lieu['Nhan']

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

print(f"B·∫Øt ƒë·∫ßu train m√¥ h√¨nh v·ªõi {len(X_train)} email train v√† {len(X_test)} email test\n")

# ------------------------------
# 4Ô∏è‚É£ Pipeline TF-IDF + Naive Bayes
# ------------------------------
mo_hinh = Pipeline([
    ('tfidf', TfidfVectorizer(ngram_range=(1,2), max_features=5000)),
    ('nb', MultinomialNB(alpha=0.1))
])

# ------------------------------
# 5Ô∏è‚É£ Train m√¥ h√¨nh
# ------------------------------
mo_hinh.fit(X_train, y_train)
print("‚úÖ Train xong, b·∫Øt ƒë·∫ßu ƒë√°nh gi√° m√¥ h√¨nh...\n")

# ------------------------------
# 6Ô∏è‚É£ ƒê√°nh gi√° m√¥ h√¨nh
# ------------------------------
y_pred = mo_hinh.predict(X_test)

print("üìä B√°o c√°o ph√¢n lo·∫°i chi ti·∫øt:\n")
print(classification_report(y_test, y_pred, digits=4))

print("üìå Ma tr·∫≠n nh·∫ßm l·∫´n:\n")
cm = confusion_matrix(y_test, y_pred, labels=du_lieu['Nhan'].unique())
print(cm)

# ------------------------------
# 7Ô∏è‚É£ V·∫Ω ma tr·∫≠n nh·∫ßm l·∫´n tr·ª±c quan
# ------------------------------
plt.figure(figsize=(8,6))
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',
            xticklabels=du_lieu['Nhan'].unique(),
            yticklabels=du_lieu['Nhan'].unique())
plt.ylabel('Nh√£n th·∫≠t')
plt.xlabel('Nh√£n d·ª± ƒëo√°n')
plt.title('Ma tr·∫≠n nh·∫ßm l·∫´n tr·ª±c quan')
plt.show()

# ------------------------------
# 8Ô∏è‚É£ L∆∞u m√¥ h√¨nh
# ------------------------------
joblib.dump(mo_hinh, 'D:\\NAMBA\\ChuyenDoiSo\\Email_AI\\mo_hinh_email.pkl')
print("M√¥ h√¨nh ƒë√£ ƒë∆∞·ª£c l∆∞u")
